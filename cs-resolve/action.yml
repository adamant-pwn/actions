name: "oj-resolve"
description: "A composite action that competitive-verifier oj-resolve"
author: "Kzrnm"
branding:
  color: blue
  icon: target
inputs:
  solution:
    description: "The file path of solution."
    required: true
  output-path:
    description: "The file path of oj-resolve result json."
    required: true
    default: ${{runner.temp}}/verify-files.json
  include:
    description: "Argument of oj-resolve --include."
    required: false
    default: ""
  exclude:
    description: "Argument of oj-resolve --exclude."
    required: false
    default: ""
  unittest-result:
    description: "Specify unittest result csv path. Argument of oj-resolve --unittest."
    required: false
    default: ""
  problems:
    description: "output of CompetitiveVerifierProblem. Argument of oj-resolve --problems."
    required: false
    default: ""
  msbuild-properties:
    description: "MSBuild properties. Argument of oj-resolve --properties."
    required: false
    default: ""
outputs:
  json-path:
    description: "The path of verify files json."
    value: ${{ steps.resolve.outputs.json-path }}
runs:
  using: composite
  steps:
    - name: cs-resolve
      shell: bash
      id: resolve
      run: |
        competitive-verifier-cs-resolver ${{inputs.solution}} $unittest $problems $include $exclude $msbuild_props | tee "$OUTPUT_FILE"
        echo "json-path=$OUTPUT_FILE" >> $GITHUB_OUTPUT
      env:
        include: ${{ format(inputs.include && '--include {0}', inputs.include) }}
        exclude: ${{ format(inputs.exclude && '--exclude {0}', inputs.exclude) }}
        unittest: ${{ format(inputs.unittest-result && '--unittest {0}', inputs.unittest-result) }}
        problems: ${{ format(inputs.problems && '--problems {0}', inputs.problems) }}
        msbuild_props: ${{ format(inputs.msbuild-properties && '--properties {0}', inputs.msbuild-properties) }}
        OUTPUT_FILE: ${{ inputs.output-path }}
